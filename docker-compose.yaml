services:
  frontend:
    build:
      context: ./frontend
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./backend
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    command: >
      sh -c "
        echo 'Database is healthy, running migrations...'
        npx knex migrate:latest --knexfile ./knexfile.js
        MIGRATE_EXIT_CODE=$$?
        if [ $$MIGRATE_EXIT_CODE -ne 0 ]; then
          echo \"Database migrations failed with exit code $$MIGRATE_EXIT_CODE.\"
          exit $$MIGRATE_EXIT_CODE
        fi
        echo 'Database migrations completed successfully.'

        echo 'Starting application...'
        # NODE_ENV'ye göre doğru başlatma komutunu seç
        if [ \"$${NODE_ENV}\" = \"production\" ]; then
          exec node src/index.js
        else
          exec npm run dev
        fi
      "

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cafe
      - TZ=Europe/Istanbul
      - default-time-zone='+03:00'
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:
