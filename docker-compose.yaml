services:
  frontend:
    build:
      context: ./frontend
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./backend
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=cafe
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cafe
      - TZ=Europe/Istanbul
      - default-time-zone='+03:00'
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/src/config/db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  db_data:
